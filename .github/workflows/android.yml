name: Build Android (Capacitor)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps
        run: npm ci

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Create placeholder webDir
        run: |
          mkdir -p dist
          [ -f dist/index.html ] || echo '<!doctype html><title>Stockify</title>' > dist/index.html

      - name: Initialize Capacitor app
        run: npx cap init "Stockify soufian" "com.soufian.stockify" --web-dir=dist --npm-client=npm

      - name: Add Android platform
        run: npx cap add android

      - name: Sync Capacitor (use remote URL from config)
        run: npx cap sync android

      - name: Ensure camera permissions in AndroidManifest.xml
        run: |
          MANIFEST=android/app/src/main/AndroidManifest.xml
          # Add lines only if missing
          grep -q 'android.permission.CAMERA' "$MANIFEST" ||             sed -i 's#<manifest#<manifest\n    <uses-permission android:name="android.permission.CAMERA" />\n    <uses-permission android:name="android.permission.VIBRATE" />\n    <uses-feature android:name="android.hardware.camera" android:required="false" />\n    <uses-feature android:name="android.hardware.camera.autofocus" android:required="false" />#' "$MANIFEST"

      - name: Make gradlew executable
        run: chmod +x android/gradlew

      - name: Try release signing (optional)
        if: ${{ secrets.KEYSTORE_BASE64 != '' }}
        run: |
          echo "$KEYSTORE_BASE64" | base64 -d > release.jks
          APP_GRADLE=android/app/build.gradle
          if ! grep -q "signingConfigs" "$APP_GRADLE"; then
            sed -i '/android\s*{.*/a \\n    signingConfigs {\\n        release {\\n            storeFile file(System.getenv("STORE_FILE") ?: "release.jks")\\n            storePassword System.getenv("STORE_PASSWORD") ?: ""\\n            keyAlias System.getenv("KEY_ALIAS") ?: ""\\n            keyPassword System.getenv("KEY_PASSWORD") ?: ""\\n        }\\n    }' "$APP_GRADLE"
          fi
          if ! grep -q "release {" "$APP_GRADLE"; then
            sed -i '0,/buildTypes\s*{/{s//buildTypes {\\n        release {\\n            signingConfig signingConfigs.release\\n        }\\n/}' "$APP_GRADLE"
          fi
          echo "STORE_FILE=$(pwd)/release.jks" >> $GITHUB_ENV
          echo "STORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}" >> $GITHUB_ENV
          echo "KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> $GITHUB_ENV
          echo "KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> $GITHUB_ENV

      - name: Build (release if signed, else debug)
        working-directory: android
        run: |
          ./gradlew clean
          if [ -n "${STORE_PASSWORD}" ] && [ -n "${KEY_ALIAS}" ] && [ -n "${KEY_PASSWORD}" ]; then
            echo "Building signed release APK & AAB"
            ./gradlew assembleRelease
            ./gradlew bundleRelease
          else
            echo "No signing secrets set - building debug APK"
            ./gradlew assembleDebug

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-build
          path: |
            android/app/build/outputs/apk/release/*.apk
            android/app/build/outputs/bundle/release/*.aab
            android/app/build/outputs/apk/debug/*.apk
